---
- name: Add resource
  hosts: pacemaker-nodes
  run_once: true
  vars:
    resources:
      - dummy1
      - dummy2
    resource_group: Dummies
    resource_witness: "{{ groups['pacemaker-nodes'][-1] }}"
    resource_primary: "{{ groups['pacemaker-nodes'][1] }}"
  tasks:
    - name: Define resources
      command: "crm configure primitive {{ item }} ocf:pacemaker:Dummy op monitor interval=10s"
      with_items: "{{ resources }}"

    - name: Colocate resources
      command: "crm configure colocation {{ resource_group }} inf: {{ resources | join(' ') }}"

    - name: Ban resources on witness node
      command: "crm_resource --resource {{ resources[0] }} --ban --host {{ resource_witness }}"

    - name: Add ping test resource
      command: "crm configure primitive dummy_ping ocf:pacemaker:ping params dampen=5s multiplier=1000 host_list='8.8.8.8 4.2.2.2' op monitor interval=15s timeout=5s"

    - name: Clone ping test
      command: "crm configure clone clone_ping dummy_ping"

    - name: Resource prefer nodes with ping
      command: "crm configure location {{ resources[0] }}_needs_ping {{ resources[0] }} rule -inf: not_defined pingd or pingd lte 1"

- name: Test Ping Failure
  hosts: pacemaker-nodes
  run_once: true
  vars:
    resource: dummy1
    resource_test_node: "{{ groups['pacemaker-nodes'][1] }}"
  tasks:
    # For some unknown reason, ping check dies on one node while others are ok
    - name: Flush checks
      command: crm_resource -P

    - pause: seconds=20

    - name: Check current resource location
      command: crm_resource -W -r {{ resource }}
      register: resource_loc

    - name: Assert resource currently on test node
      assert: { that: "resource_test_node in resource_loc.stdout" }

    - name: Make ping test fail
      delegate_to: "{{ resource_test_node }}"
      command: iptables -A INPUT -s {{ item }} -j DROP
      with_items:
        - 8.8.8.8

    - name: Wait a moment
      pause: seconds=20

    - name: Check current resource location
      command: crm_resource -W -r {{ resource }}
      register: resource_loc

    - name: Assert resource currently NOT on test node
      assert: { that: "resource_test_node not in resource_loc.stdout" }

    - name: Fix ping test
      delegate_to: "{{ resource_test_node }}"
      command: iptables -F

    - name: Wait a moment
      pause: seconds=2

    - name: Check resource has NOT failback
      command: crm_resource -W -r {{ resource }}
      register: resource_loc

    - name: Assert resource has NOT moved
      assert: { that: "resource_test_node not in resource_loc.stdout" }
